---
title: "Engaging & Reproducible Data Visualization"
subtitle: "<span style='font-size:1.5em;'>From Theory to Implementation with ggplot2</span><br><span style='font-weight:500;font-size:1.3em;'>Concepts of the Layered Grammar of Graphics (Pt. 2)</span></span>"
author: "<b style='color:#28a87d;'><a href='https://www.cedricscherer.com'>Dr. Cédric Scherer</a></b>&ensp;**//**&ensp;NC<sup>3</sup> Workshop&ensp;**//**&ensp;January 2024"
format:
  revealjs:
    theme: slides.scss
    logo: img/logo.png
    footer: '**[Cédric Scherer](https://cedricscherer.com)** // Data Visualization & Information Design'
    transition: fade
    progress: true
    multiplex: false
    preview-links: true
    scrollable: false
    hide-inactive-cursor: true
    highlight-style: printing
    chalkboard:
      theme: whiteboard
      boardmarker-width: 4
      buttons: true
    pause: true
    mainfont: Asap SemiCondensed
editor: source
knitr:
  opts_chunk:
    dev: "ragg_png"
    retina: 3
    dpi: 200
execute:
  freeze: auto
  cache: true
  echo: true
  fig-width: 5
  fig-height: 6
---



## The Components of a ggplot


<br>
<table style='width:100%;font-size:16pt;'>
  <tr>
    <th>Component</th>
    <th>Function</th>
    <th>Explanation</th>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Data</b></td>
    <td><code>ggplot(data)</code>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</td>
    <td>*The raw data that you want to visualize (initialising a plot).*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Aesthetics&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</b></td>
    <td><code>aes()</code></td>
    <td>*The mapping between variables and visual properties.*</td>
  <tr>
    <td><b style='color:#67676;'>Geometries</b></td>
    <td><code>geom_*()</code></td>
    <td>*The geometric shape of a layer representing the data.*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Statistics</b></td>
    <td><code>stat_*()</code></td>
    <td>*The statistical transformation of a layer applied to the data.*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Scales</b></td>
    <td><code>scale_*()</code></td>
    <td>*The representation of mapped aesthetic attributes.*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Coordinate System</b></td>
    <td><code>coord_*()</code></td>
    <td>*The transformation to map data coordinates into the plot plane.*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Facets</b></td>
    <td><code>facet_*()</code></td>
    <td>*The arrangement of the data into a set of small multiples.*</td>
  </tr>
  <tr>
    <td><b style='color:#67676;'>Visual Themes</b></td>
    <td><code>theme() | theme_*()</code></td>
    <td>*The overall visual defaults of non-data elements of the graphic.*</td>
  </tr>
</table>



## Preparation

```{r}
#| label: prep
#| cache: false
#| code-line-numbers: "1,2|4,5,6,7|9|11,12,13,14,15,16"
library(ggplot2)
library(dplyr)

bikes <- readr::read_csv(
  here::here("data", "london-bikes-custom.csv"),
  col_types = "Dcfffilllddddc"
)

theme_set(theme_light(base_size = 14, base_family = "Asap SemiCondensed"))

theme_update(
  panel.grid.minor = element_blank(),
  plot.title = element_text(face = "bold"),
  legend.position = "top",
  plot.title.position = "plot"
)
```



# Facets



## Facets

<br>

<b class='simple-highlight-grn' style='font-size:2.6rem;'>= split variables to multiple panels</b><br><br>

::: fragment
Facets are also known as:

-   small multiples
-   trellis graphs
-   lattice plots
-   conditioning
:::



------------------------------------------------------------------------

::: {layout-ncol="2"}
```{r}
#| label: facet-types-wrap
#| echo: false
#| purl: false
ggplot(bikes, aes(x = 1, y = 1)) +
  geom_text(
    aes(label = paste0("Subset for\n", stringr::str_to_title(season))),
    size = 6, family = "Asap SemiCondensed", lineheight = .9
  ) +
  facet_wrap(~ stringr::str_to_title(season)) +
  ggtitle("facet_wrap()") +
  theme_bw(base_size = 24, base_family = "Asap SemiCondensed") +
  theme(
    plot.title = element_text(hjust = .5, family = "Spline Sans Mono", face = "bold"),
    strip.text = element_text(face = "bold", size = 22),
    panel.grid = element_blank(),
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    plot.background = element_rect(color = "#f8f8f8", fill = "#f8f8f8"),
    plot.margin = margin(t = 3, r = 25)
  )
```

::: fragment
```{r}
#| label: facet-types-grid
#| echo: false
#| purl: false
data <- tibble::tibble(
  x = 1, y = 1,
  day_night = c("Day", "Day", "Night", "Night"),
  year = factor(c("2015", "2016", "2015", "2016"), levels = levels(bikes$year)),
  label = c("Subset for\nDay × 2015", "Subset for\nDay × 2016",
            "Subset for\nNight × 2015", "Subset for\nNight × 2016")
)

ggplot(data, aes(x = 1, y = 1)) +
 geom_text(
    aes(label = label),
    size = 6, family = "Asap SemiCondensed", lineheight = .9
  ) +
  facet_grid(day_night ~ year) +
  ggtitle("facet_grid()") +
  theme_bw(base_size = 24, base_family = "Asap SemiCondensed") +
  theme(
    plot.title = element_text(hjust = .5, family = "Spline Sans Mono", face = "bold"),
    strip.text = element_text(face = "bold", size = 22),
    panel.grid = element_blank(),
    axis.ticks = element_blank(),
    axis.text = element_blank(),
    axis.title = element_blank(),
    plot.background = element_rect(color = "#f8f8f8", fill = "#f8f8f8"),
    plot.margin = margin(t = 3, l = 25)
  )
```
:::
:::



## Setup

```{r}
#| label: theme-size-facets
#| include: false
#| purl: false
theme_set(theme_light(base_size = 12, base_family = "Asap SemiCondensed"))

theme_update(
  panel.grid.minor = element_blank(),
  plot.title = element_text(face = "bold"),
  legend.position = "top",
  plot.title.position = "plot"
)
```

```{r}
#| label: facet-setup
#| output-location: column
#| code-line-numbers: "1,2,3,4,5,6,7,8,9,10|12"
g <-
  ggplot(
    bikes,
    aes(x = temp, y = count,
        color = season)
  ) +
  geom_point(
    alpha = .3,
    guide = "none"
  )

g
```



## Wrapped Facets

```{r}
#| label: facet-wrap
#| output-location: column
#| code-line-numbers: "1,2,3,4|2,4|3"
g +
  facet_wrap(
    vars(day_night)
  )
```



## Wrapped Facets

```{r}
#| label: facet-wrap-circumflex
#| output-location: column
#| code-line-numbers: "3"
g +
  facet_wrap(
    ~ day_night
  )
```



## Facet Multiple Variables

```{r}
#| label: facet-wrap-multiple
#| output-location: column
#| code-line-numbers: "3"
g +
  facet_wrap(
    ~ is_workday + day_night
  )
```



## Facet Labellers

```{r}
#| label: facet-wrap-labels-1
#| output-location: column
#| code-line-numbers: "4"
g +
  facet_wrap(
    ~ is_workday + day_night,
    labeller = label_both
  )
```



## Facet Labellers

```{r}
#| label: facet-wrap-labels-2
#| output-location: column
#| code-line-numbers: "4,7|5,6"
g +
  facet_wrap(
    ~ is_workday + day_night,
    labeller = labeller(
      day_night = stringr::str_to_title,
      is_workday = label_both
    )
  )
```



## Facet Labellers

```{r}
#| label: facet-wrap-labels-3
#| output-location: column
#| code-line-numbers: "1,2,3,4|10,11"
codes <- c(
  `TRUE` = "Workday",
  `FALSE` = "Weekend or Holiday"
)

g +
  facet_wrap(
    ~ is_workday + day_night,
    labeller = labeller(
      day_night = stringr::str_to_title,
      is_workday = codes
    )
  )
```



## Facet Labellers

```{r}
#| label: facet-wrap-labels-4
#| output-location: column
#| code-line-numbers: "10"
codes <- c(
  `TRUE` = "Workday",
  `FALSE` = "Weekend or Holiday"
)

g +
  facet_wrap(
    ~ is_workday + day_night,
    labeller = labeller(
      .default = stringr::str_to_title,
      is_workday = codes
    )
  )
```



## Facet Options: Cols + Rows

```{r}
#| label: facet-wrap-options-ncol
#| output-location: column
#| code-line-numbers: "4"
g +
  facet_wrap(
    ~ day_night,
    ncol = 1
  )
```



## Facet Options: Free Scaling

```{r}
#| label: facet-wrap-options-scales
#| output-location: column
#| code-line-numbers: "5"
g +
  facet_wrap(
    ~ day_night,
    ncol = 1,
    scales = "free"
  )
```



## Facet Options: Free Scaling

```{r}
#| label: facet-wrap-options-freey
#| output-location: column
#| code-line-numbers: "5"
g +
  facet_wrap(
    ~ day_night,
    ncol = 1,
    scales = "free_y"
  )
```



## Facet Options: Switch Labels

```{r}
#| label: facet-wrap-options-switch
#| output-location: column
#| code-line-numbers: "5"
g +
  facet_wrap(
    ~ day_night,
    ncol = 1,
    switch = "x"
  )
```



## Gridded Facets

```{r}
#| label: facet-grid
#| output-location: column
#| code-line-numbers: "2,5|3,4"
g +
  facet_grid(
    rows = vars(day_night),
    cols = vars(is_weekend)
  )
```



## Gridded Facets

```{r}
#| label: facet-grid-circumflex
#| output-location: column
#| code-line-numbers: "3"
g +
  facet_grid(
    day_night ~ is_weekend
  )
```



## Facet Multiple Variables

```{r}
#| label: facet-grid-multiple
#| output-location: column
#| code-line-numbers: "3"
g +
  facet_grid(
    day_night ~ is_weekend + is_holiday
  )
```



## Facet Labellers

```{r}
#| label: facet-grid-labeller
#| output-location: column
#| code-line-numbers: "1,2,3,4|6,7,8,9|14,15,16,17,18"
codes_weekend <- c(
  `TRUE` = "Weekend",
  `FALSE` = "No weekend"
)

codes_holiday <- c(
  `TRUE` = "Holiday",
  `FALSE` = "No holiday"
)

g +
  facet_grid(
    day_night ~ is_weekend + is_holiday,
    labeller = labeller(
      day_night = stringr::str_to_title,
      is_weekend = codes_weekend,
      is_holiday = codes_holiday
    )
  )
```



## Facet Options: Free Scaling

```{r}
#| label: facet-grid-options-scales
#| output-location: column
#| code-line-numbers: "4"
g +
  facet_grid(
    day_night ~ is_weekend,
    scales = "free"
  )
```



## Facet Options: Switch Labels

```{r}
#| label: facet-grid-options-switch
#| output-location: column
#| code-line-numbers: "5"
g +
  facet_grid(
    day_night ~ is_weekend,
    scales = "free",
    switch = "y"
  )
```



## Facet Options: Proportional Spacing

```{r}
#| label: facet-grid-options-space
#| output-location: column
#| code-line-numbers: "4,5|5"
g +
  facet_grid(
    day_night ~ is_weekend,
    scales = "free",
    space = "free"
  )
```



## Facet Options: Proportional Spacing

```{r}
#| label: facet-grid-options-space-y
#| output-location: column
#| code-line-numbers: "4,5"
g +
  facet_grid(
    day_night ~ is_weekend,
    scales = "free_y",
    space = "free_y"
  )
```



## Show Overall Data Across Panells

```{r}
#| label: facet-grid-show-overall
#| output-location: column
#| code-line-numbers: "5,6,7,8,9,10|6,7,8|11,12,13,14,15,16"
ggplot(
    bikes,
    aes(x = temp, y = count)
  ) +
  geom_point(
    data = dplyr::select(
      bikes, temp, count
    ), 
    color = "grey80"
  ) +
  geom_point(
    alpha = .3
  ) +
  facet_grid(
    day_night ~ is_weekend
  )
```





# Exercise



## Your Turn!

::: question
**Create the following facet showing mean ± standard deviation using the `mpg` data**.

```{r}
#| label: exercise-facets
#| fig-width: 10
#| fig-height: 5
#| echo: false
#| purl: false
ggplot(mpg, aes(x = fl, y = cty, color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  )  +
  facet_grid(year ~ class, scales = "free_x", space = "free_x",
             labeller = labeller(.default = stringr::str_to_title)) +
  labs(x = "Fuel type", y = "City miles per gallon") +
  theme_bw(base_size = 12, base_family = "Asap SemiCondensed") +
  theme(legend.position = "none",
        panel.grid.minor = element_blank())
```
:::



## Your Turn!

::: question
<b style="color:#1D785A;">Alternative version:</b> Show values as jitter strips.

```{r}
#| label: exercise-facets-jitter
#| fig-width: 10
#| fig-height: 5
#| echo: false
#| purl: false
ggplot(mpg, aes(x = fl, y = cty, color = fl)) +
  geom_jitter(width = .2, alpha = .6) +
  facet_grid(year ~ class, scales = "free_x", space = "free_x",
             labeller = labeller(.default = stringr::str_to_title)) +
  labs(x = "Fuel type", y = "City miles per gallon") +
  theme_bw(base_size = 12, base_family = "Asap SemiCondensed") +
  theme(legend.position = "none",
        panel.grid.minor = element_blank())
```
:::



# Solution Exercise {background-color="#e6d9f2"}

```{r}
#| include: false
#| cache: false
theme_set(theme_grey())
```


## Create Base Plot: Jitter Strips

```{r}
#| label: exercise-facets-solution-01
#| output-location: column
#| code-line-numbers: "3,4,5,6"
ggplot(mpg, aes(x = fl, y = cty, 
                color = fl)) +
  geom_jitter(
    width = .2, 
    alpha = .6
  )
```


## Create Base Plot: Error Bars

```{r}
#| label: exercise-facets-solution-02
#| output-location: column
#| code-line-numbers: "3,4,5,6,7"
ggplot(mpg, aes(x = fl, y = cty, 
                color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  )
```



## Turn Into Facet

```{r}
#| label: exercise-facets-solution-03
#| output-location: column
#| code-line-numbers: "8,9,10"
ggplot(mpg, aes(x = fl, y = cty, 
                color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  )  +
  facet_grid(
    year ~ class
  )
```



## Turn Into Facet

```{r}
#| label: exercise-facets-solution-04
#| output-location: column
#| code-line-numbers: "10,11|10,11,12,13,14"
ggplot(mpg, aes(x = fl, y = cty, 
                color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  )  +
  facet_grid(
    year ~ class, 
    scales = "free_x", 
    space = "free_x",
    labeller = labeller(
      .default = stringr::str_to_title
    )
  )
```


## Store the Facet

```{r}
#| label: exercise-facets-solution-store
#| output-location: column
#| code-line-numbers: "1"
p <- 
  ggplot(mpg, aes(x = fl, y = cty, 
                  color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  )  +
  facet_grid(
    year ~ class, 
    scales = "free_x", 
    space = "free_x",
    labeller = labeller(
      .default = stringr::str_to_title
    )
  )
```


## Polish the Plot

```{r}
#| label: exercise-facets-solution-05
#| output-location: column
#| code-line-numbers: "18,19,20,21"
p +
  labs(
    x = "Fuel type", 
    y = "City miles per gallon"
  ) +
  theme_bw(
    base_size = 12, 
    base_family = "Asap SemiCondensed"
  ) +
  theme(
    legend.position = "none",
    panel.grid.minor = element_blank()
  )
```


## Jitter Version (Full Code)

```{r}
#| label: exercise-facets-solution-06
#| output-location: column
ggplot(mpg, aes(x = fl, y = cty, 
                color = fl)) +
  geom_jitter(
    width = .2,
    alpha = .6
  ) +
  facet_grid(
    year ~ class, 
    scales = "free_x", 
    space = "free_x",
    labeller = labeller(
      .default = stringr::str_to_title
    )
  ) +
  labs(
    x = "Fuel type", 
    y = "City miles per gallon"
  ) +
  theme_bw(
    base_size = 12, 
    base_family = "Asap SemiCondensed"
  ) +
  theme(
    legend.position = "none",
    panel.grid.minor = element_blank()
  )
```



# Scales

```{r}
#| label: theme-size-reset
#| include: false
#| purl: false
theme_set(theme_light(base_size = 14, base_family = "Asap SemiCondensed"))

theme_update(
  panel.grid.minor = element_blank(),
  plot.title = element_text(face = "bold"),
  legend.position = "top",
  plot.title.position = "plot"
)
```



## Scales

<br>

<b class='simple-highlight-grn' style='font-size:2.6rem;'>= translate between variable ranges and property ranges</b><br><br>

::: incremental
-   feels-like temperature ⇄ x
-   reported bike shares ⇄ y
-   season ⇄ color
-   year ⇄ shape
-   ...
:::



## Scales

The `scale_*()` components control the properties of all the<br><b class='simple-highlight-ylw'>aesthetic dimensions mapped to the data.</b>

<br>Consequently, there are `scale_*()` functions for all aesthetics such as:

-   **positions** via `scale_x_*()` and `scale_y_*()`

-   **colors** via `scale_color_*()` and `scale_fill_*()`

-   **sizes** via `scale_size_*()` and `scale_radius_*()`

-   **shapes** via `scale_shape_*()` and `scale_linetype_*()`

-   **transparency** via `scale_alpha_*()`



## Scales

The `scale_*()` components control the properties of all the<br><b class='simple-highlight-ylw'>aesthetic dimensions mapped to the data.</b>

<br>The extensions (`*`) can be filled by e.g.:

-   `continuous()`, `discrete()`, `reverse()`, `log10()`, `sqrt()`, `date()` for positions

-   `continuous()`, `discrete()`, `manual()`, `gradient()`, `gradient2()` for colors

-   `continuous()`, `discrete()`, `manual()`, `ordinal()`, `area()`, `date()` for sizes

-   `continuous()`, `discrete()`, `manual()`, `ordinal()` for shapes

-   `continuous()`, `discrete()`, `manual()`, `ordinal()`, `date()` for transparency



------------------------------------------------------------------------

![Illustration by [Allison Horst](https://github.com/allisonhorst/stats-illustrations)](img/ggplot/continuous_discrete.png){fig-size="120%" fig-align="center" fig-alt="Allison Horsts illustration ofthe correct use of continuous versus discrete; however, in {ggplot2} these are interpeted in a different way: as quantitative and qualitative."}



## Continuous vs. Discrete in {ggplot2}

::: {layout-ncol="2"}
## Continuous:<br>quantitative or numerical data

-   height
-   weight
-   age
-   counts

## Discrete:<br>qualitative or categorical data

-   species
-   sex
-   study sites
-   age group
:::



## Continuous vs. Discrete in {ggplot2}

::: {layout-ncol="2"}
## Continuous:<br>quantitative or numerical data

-   height (continuous)
-   weight (continuous)
-   age (continuous or discrete)
-   counts (discrete)

## Discrete:<br>qualitative or categorical data

-   species (nominal)
-   sex (nominal)
-   study site (nominal or ordinal)
-   age group (ordinal)
:::



## Aesthetics + Scales

```{r}
#| label: scales-default-invisible
#| output-location: column
#| code-line-numbers: "3,4"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point()
```



## Aesthetics + Scales

```{r}
#| label: scales-default
#| output-location: column
#| code-line-numbers: "3,4,7,8,9|7,8,9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_date() +
  scale_y_continuous() +
  scale_color_discrete()
```



## Scales

```{r}
#| label: scales-overwrite-1
#| output-location: column
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_continuous() +
  scale_y_continuous() +
  scale_color_discrete()
```



## Scales

```{r}
#| label: scales-overwrite-2
#| output-location: column
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_continuous() +
  scale_y_log10() +
  scale_color_discrete()
```



## Scales

```{r}
#| label: scales-overwrite-3
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_continuous() +
  scale_y_log10() +
  scale_color_viridis_d()
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-trans
#| output-location: column
#| code-line-numbers: "8,9,10|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +  
  geom_point() +
  scale_y_continuous(
    trans = "log10"
  )
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-name
#| output-location: column
#| code-line-numbers: "7,8,9|8"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares"
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-breaks-seq
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = seq(0, 60000, by = 15000)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-breaks-short
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = 0:4*15000
  )
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-breaks-irregular
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = c(0, 2:12*2500, 40000, 50000)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-labels
#| output-location: column
#| code-line-numbers: "8,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares in thousands",
    breaks = 0:4*15000,
    labels = 0:4*15
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-labels-paste
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = 0:4*15000,
    labels = paste(0:4*15000, "bikes")
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-labels-scales
#| output-location: column
#| code-line-numbers: "10,11,12"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = 0:4*15000,
    labels = scales::label_comma(
      suffix = " bikes"
    )
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-limits
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = 0:4*15000,
    limits = c(NA, 60000)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-expand.no
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = 0:4*15000,
    expand = c(0, 0)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-expand
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = -1:5*15000,
    expand = c(.5, .5) ## c(add, mult)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-expand-add-explicit
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = -1:5*15000,
    expand = expansion(add = 2000)
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-expand-add-range
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    breaks = -1:5*15000,
    expand = expansion(add = c(2000, 0))
  ) 
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-continuous-guide-none
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Reported bike shares",
    guide = "none"
  )
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-duplicated
#| output-location: column
#| code-line-numbers: "3|7,8,9,10|9"
ggplot(
    bikes,
    aes(x = date, y = temp,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Temperature (°C)",
    sec.axis = dup_axis()
  )
```



## \`scale_x\|y_continuous\`

```{r}
#| label: scales-xy-secondary
#| output-location: column
#| code-line-numbers: "9|10|11"
ggplot(
    bikes,
    aes(x = date, y = temp,
        color = season)
  ) +
  geom_point() +
  scale_y_continuous(
    name = "Temperature (°C)",
    sec.axis = sec_axis(
      trans = ~ (. * 9/5) + 32,
      name = "Temperature (°F)"
    )
  )
```



## \`scale_x\|y_date\`

```{r}
#| label: scales-xy-date-breaks-months
#| output-location: column
#| code-line-numbers: "7,10|7,8,9,10|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_date(
    name = NULL,
    date_breaks = "4 months"
  )
```



## \`scale_x\|y_date\`

```{r}
#| label: scales-xy-date-breaks-weeks
#| output-location: column
#| code-line-numbers: "9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_date(
    name = NULL,
    date_breaks = "20 weeks"
  )
```



## \`scale_x\|y_date\` with \`strftime()\`

```{r}
#| label: scales-xy-date-labels
#| output-location: column
#| code-line-numbers: "9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_date(
    name = NULL,
    date_breaks = "6 months",
    date_labels = "%Y/%m/%d"
  )
```



## \`scale_x\|y_date\` with \`strftime()\`

```{r}
#| label: scales-xy-date-labels-special
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_x_date(
    name = NULL,
    date_breaks = "6 months",
    date_labels = "%b '%y"
  )
```



## \`scale_x\|y_discrete\`

```{r}
#| label: scales-xy-discrete
#| output-location: column
#| code-line-numbers: "3,6,9|6,7,8,9|7,8"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  scale_x_discrete(
    name = "Period",
    labels = c("Dec-Feb", "Mar-May", "Jun-Aug", "Sep-Nov")
  )
```



## \`scale_x\|y_discrete\`

```{r}
#| label: scales-xy-discrete-expand
#| output-location: column
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  scale_x_discrete(
    name = "Season",
    expand = c(.5, 0) ## add, mult
  )
```



## Discrete or Continuous?

```{r}
#| label: scales-xy-fake-discrete-no-group
#| output-location: column
#| code-line-numbers: "3"
ggplot(
    bikes,
    aes(x = as.numeric(season), y = count)
  ) +
  geom_boxplot()
```



## Discrete or Continuous?

```{r}
#| label: scales-xy-fake-discrete-visible
#| output-location: column
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = as.numeric(season), y = count)
  ) +
  geom_boxplot(
    aes(group = season)
  )
```



## Discrete or Continuous?

```{r}
#| label: scales-xy-fake-discrete
#| output-location: column
#| code-line-numbers: "9,10,11,12,13|11|12"
ggplot(
    bikes,
    aes(x = as.numeric(season),
        y = count)
  ) +
  geom_boxplot(
    aes(group = season)
  ) +
  scale_x_continuous(
    name = "Season",
    breaks = 1:4,
    labels = levels(bikes$season)
  )
```



## Discrete or Continuous?

```{r}
#| label: scales-xy-fake-discrete-shift
#| output-location: column
#| code-line-numbers: "3,4"
ggplot(
    bikes,
    aes(x = as.numeric(season) + 
            as.numeric(season) / 8,
        y = count)
  ) +
  geom_boxplot(
    aes(group = season)
  ) +
  scale_x_continuous(
    name = "Season",
    breaks = 1:4,
    labels = levels(bikes$season)
  )
```



## Discrete or Continuous?

```{r}
#| label: scales-xy-fake-discrete-box-jitter
#| output-location: column
#| code-line-numbers: "3,4|7,11|6,7,8,9|10,11,12,13,14"
ggplot(
    bikes,
    aes(y = count,
        group = season)
  ) +
  geom_boxplot(
    aes(x = as.numeric(season) + .15),
    width = .3
  ) +
  geom_jitter(
    aes(x = as.numeric(season) - .15),
    width = .1,
    alpha = .3
  ) +
  scale_x_continuous(
    name = "Season",
    breaks = 1:4,
    labels = levels(bikes$season)
  )
```



## \`scale_color\|fill_discrete\`

```{r}
#| label: scales-color-discrete-type-vector
#| output-location: column
#| code-line-numbers: "7,10|7,8,9,10|8,9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_discrete(
    name = "Season:",
    type = c("#69b0d4", "#00CB79", "#F7B01B", "#a78f5f")
  )
```



## Inspect Assigned Colors

```{r}
#| label: scales-color-discrete-type-inspect
#| output-location: column
#| code-line-numbers: "1|12|14"
g <- ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_discrete(
    name = "Season:",
    type = c("#3ca7d9", "#1ec99b", "#F7B01B", "#bb7e8f")
  )

gb <- ggplot_build(g)

gb$data[[1]][c(1:5, 200:205, 400:405), 1:5]
```



## \`scale_color\|fill_discrete\`

```{r}
#| label: scales-color-discrete-type-vector-named
#| output-location: column
#| code-line-numbers: "1,2,3,4,5,6|1,16"
my_colors <- c(
  `winter` = "#3c89d9",
  `spring` = "#1ec99b",
  `summer` = "#F7B01B",
  `autumn` = "#a26e7c"
)

ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_discrete(
    name = "Season:",
    type = my_colors
  )
```



## \`scale_color\|fill_discrete\`

```{r}
#| label: scales-color-discrete-type-vector-named-shuffled
#| output-location: column
#| code-line-numbers: "2,5|1,16"
my_colors_alphabetical <- c(
  `autumn` = "#a26e7c",
  `spring` = "#1ec99b",
  `summer` = "#F7B01B",
  `winter` = "#3c89d9"
)

ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_discrete(
    name = "Season:",
    type = my_colors_alphabetical
  )
```



## \`scale_color\|fill_discrete\`

```{r}
#| label: scales-color-discrete-type-palette
#| output-location: column
#| code-line-numbers: "1|11,12,13"
library(RColorBrewer)

ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_discrete(
    name = "Season:",
    type = brewer.pal(
      n = 4, name = "Dark2"
    )
  )
```



## \`scale_color\|fill_manual\`

```{r}
#| label: scales-color-manual-na
#| output-location: column
#| code-line-numbers: "4,9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = weather_type)
  ) +
  geom_point() +
  scale_color_manual(
    name = NULL,
    values = brewer.pal(n = 6, name = "Pastel1"),
    na.value = "black"
  )
```



## \`scale_color\|fill_carto_d\`

```{r}
#| label: scales-color-discrete-carto
#| output-location: column
#| code-line-numbers: "7,8,9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = weather_type)
  ) +
  geom_point() +
  rcartocolor::scale_color_carto_d(
    name = NULL,
    palette = "Pastel",
    na.value = "black"
  )
```



## \`scale_color\|fill_continuous\`

```{r}
#| label: scales-color-continuous
#| output-location: column
#| code-line-numbers: "4,7"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_continuous()
```

## \`scale_color\|fill_continuous\`

```{r}
#| label: scales-color-continuous-viridis
#| output-location: column
#| code-line-numbers: "8|8,9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_continuous(
    name = "Temperature:",
    type = "viridis"
  )
```

## \`scale_color\|fill_gradient\`

```{r}
#| label: scales-color-gradient
#| output-location: column
#| code-line-numbers: "7,11|9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_gradient(
    name = "Temperature:",
    low = "grey90",
    high = "#8b0023"
  )
```

## \`scale_color\|fill_gradient2\`

```{r}
#| label: scales-color-gradient2
#| output-location: column
#| code-line-numbers: "7,12|9,10,11"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_gradient2(
    name = "Temperature:",
    low = "#28a87d",
    mid = "grey90",
    high = "#8b0023"
  )
```

## \`scale_color\|fill_gradient2\`

```{r}
#| label: scales-color-gradient2-midpoint
#| output-location: column
#| code-line-numbers: "12"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_gradient2(
    name = "Temperature:",
    low = "#28a87d",
    mid = "grey90",
    high = "#8b0023",
    midpoint = mean(bikes$temp)
  )
```

## \`scale_color\|fill_gradientn\`

```{r}
#| label: scales-color-gradientn
#| output-location: column
#| code-line-numbers: "7,10|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_gradientn(
    name = "Temperature:",
    colors = c("red", "orange", "green", "blue")
  )
```

## \`scale_color\|fill_viridis_c\`

```{r}
#| label: scales-color-viridis-c
#| output-location: column
#| code-line-numbers: "7,10|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    name = "Temperature:",
    option = "magma"
  )
```

## \`scale_color\|fill_viridis_c\`

```{r}
#| label: scales-color-viridis-c-direction
#| output-location: column
#| code-line-numbers: "10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    name = "Temperature:",
    option = "magma",
    direction = -1
  )
```

## \`scale_color\|fill_viridis_c\`

```{r}
#| label: scales-color-viridis-c-range
#| output-location: column
#| code-line-numbers: "11,12"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    name = "Temperature:",
    option = "magma",
    direction = -1,
    begin = .2,
    end = .95
  )
```

## \`scale_color\|fill_distiller\`

```{r}
#| label: scales-color-distiller
#| output-location: column
#| code-line-numbers: "7,10|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_distiller(
    name = "Temperature:",
    palette = "RdYlBu"
  )
```



## {RColorBrewer}

```{r}
#| label: color-palettes-brewer-show-all
#| fig-width: 12
RColorBrewer::display.brewer.all()
```



## {RColorBrewer}

```{r}
#| label: color-palettes-brewer-show-cvd
#| fig-width: 12
RColorBrewer::display.brewer.all(colorblindFriendly = TRUE)
```



## \`scale_color\|fill_carto_c\`

```{r}
#| label: scales-color-carto-c
#| output-location: column
#| code-line-numbers: "7,11|9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  rcartocolor::scale_color_carto_c(
    name = "Temperature:",
    palette = "ag_GrnYl",
    direction = -1
  )
```



## {rcartocolor}

```{r}
#| label: color-palettes-carto-show-all
#| fig-width: 12
rcartocolor::display_carto_all()
```



## {rcartocolor}

```{r}
#| label: color-palettes-carto-show-cvd
#| fig-width: 12
rcartocolor::display_carto_all(colorblind_friendly = TRUE)
```



## \`scale_color\|fill_scico\`

```{r}
#| label: color-palettes-scico
#| output-location: column
#| code-line-numbers: "7,11|9"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scico::scale_color_scico(
    name = "Temperature:",
    palette = "batlow"
  )
```



## \`scale_color\|fill_scico\`

```{r}
#| label: color-palettes-scico-direction
#| output-location: column
#| code-line-numbers: "9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scico::scale_color_scico(
    name = "Temperature:",
    palette = "managua",
    direction = -1
  )
```



## {scico}

```{r}
#| label: color-palettes-scico-show-all
#| fig-width: 12
scico::scico_palette_show()
```



## Customize Existing Palettes

```{r}
#| label: color-palettes-carto-default
#| output-location: column
#| code-line-numbers: "5,6,7"
ggplot(bikes, 
       aes(x = day_night, y = count, 
           fill = season)) +
  geom_boxplot() +
  rcartocolor::scale_fill_carto_d(
    palette = "Vivid" 
  )
```



## Customize Existing Palettes

```{r}
#| label: color-palettes-carto-manual
#| output-location: column
#| code-line-numbers: "5,9|6,7,8"
ggplot(bikes, 
       aes(x = day_night, y = count, 
           fill = season)) +
  geom_boxplot() +
  scale_fill_manual(
    values = rcartocolor::carto_pal(
      name = "Vivid"
    )
  )
```



## Customize Existing Palettes

```{r}
#| label: color-palettes-carto-custom-2
#| output-location: column
#| code-line-numbers: "6,7,8|7|8"
ggplot(bikes, 
       aes(x = day_night, y = count, 
           fill = season)) +
  geom_boxplot() +
  scale_fill_manual(
    values = rcartocolor::carto_pal(
      name = "Vivid", n = 7
    )[c(2, 6, 1, 3)]
  )
```



## Customize Existing Palettes

```{r}
#| label: color-palettes-carto-custom-assign
#| output-location: column
#| code-line-numbers: "1,2,3,4|11"
carto_custom <- 
  rcartocolor::carto_pal(
    name = "Vivid", n = 7
  )[c(2, 6, 1, 3)]

ggplot(bikes, 
       aes(x = day_night, y = count, 
           fill = season)) +
  geom_boxplot() +
  scale_fill_manual(
    values = carto_custom
  )
```



## Customize Existing Palettes

```{r}
#| label: color-palettes-carto-light
#| output-location: column
#| code-line-numbers: "1|3,4,5|12"
library(colorspace)

carto_light <- lighten(
  carto_custom, .7
)

ggplot(bikes, 
       aes(x = day_night, y = count, 
           fill = season)) +
  geom_boxplot() +
  scale_fill_manual(
    values = carto_light
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-string
#| output-location: column
#| code-line-numbers: "7,9|8"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    guide = "colorsteps"
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-function
#| output-location: column
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    guide = guide_colorsteps()
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-function-limits
#| output-location: column
#| code-line-numbers: "8,9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    guide = guide_colorsteps(
      show.limits = TRUE
    )
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-function-limits-round
#| output-location: column
#| code-line-numbers: "4"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = round(temp, 2))
  ) +
  geom_point() +
  scale_color_viridis_c(
    guide = guide_colorsteps(
      show.limits = TRUE
    )
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-function-steps
#| output-location: column
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    breaks = 1:5*5,
    guide = guide_colorsteps()
  )
```



## Guides

```{r}
#| label: color-palettes-guide-steps-binned
#| output-location: column
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_b(
    breaks = 1:5*5,
    guide = guide_colorsteps()
  )
```



## Guides

```{r}
#| label: color-palettes-guide-bar-styling
#| output-location: column
#| code-line-numbers: "7,14|9,13|10,11|12|8,12"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = temp)
  ) +
  geom_point() +
  scale_color_viridis_c(
    name = "Temperature",
    guide = guide_colorbar(
      barwidth = unit(15, "lines"),
      barheight = unit(.5, "lines"),
      title.position = "top"
    )
  )
```



## Guides

```{r}
#| label: color-palettes-guide-legend
#| output-location: column
#| code-line-numbers: "7,8,10|7,8,9,10"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_brewer(
    palette = "Dark2",
    guide = guide_legend()
  )
```



## Guides

```{r}
#| label: color-palettes-guide-legend-override
#| output-location: column
#| code-line-numbers: "9,10,11,12,13,14|10,11,12,13"
ggplot(
    bikes,
    aes(x = date, y = count,
        color = season)
  ) +
  geom_point() +
  scale_color_brewer(
    palette = "Dark2",
    guide = guide_legend(
      override.aes = list(
        size = 4,
        shape = 1
      )
    )
  )
```


# Exercise


## Your Turn!

::: question
**Modify our facet to look like this:**

```{r}
#| label: exercise-scales
#| fig-width: 10
#| fig-height: 5
#| echo: false
#| purl: false
ggplot(mpg, aes(x = fl, y = cty, color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  ) +
  facet_grid(year ~ class, scales = "free_x", space = "free_x",
             labeller = labeller(.default = stringr::str_to_title)) +
  scale_x_discrete(labels = stringr::str_to_upper) +
  scale_y_continuous(breaks = 0:7*5, limits = c(0, NA)) +
  scale_color_brewer(palette = "Dark2", name = NULL, 
                     labels = stringr::str_to_title,
                     guide = guide_legend(keyheight = unit(3, "lines"))) +
  labs(x = "Fuel type", y = "City miles per gallon") +
  theme_bw(base_size = 12, base_family = "Asap SemiCondensed") +
  theme(panel.grid.minor = element_blank())
```
:::



# Solution Exercise {background-color="#e6d9f2"}



## Store Plot

```{r}
#| label: exercise-scales-solution-01
#| output-location: column
#| code-line-numbers: "1|24,25,26|28"
p <- 
  ggplot(mpg, aes(x = fl, y = cty, color = fl)) +
  stat_summary(
    fun = mean, 
    fun.max = function(y) mean(y) + sd(y), 
    fun.min = function(y) mean(y) - sd(y) 
  ) +
  facet_grid(
    year ~ class, 
    scales = "free_x", 
    space = "free_x",
    labeller = labeller(
      .default = stringr::str_to_title
    )
  ) +
  labs(
    x = "Fuel type", 
    y = "City miles per gallon"
  ) +
  theme_bw(
    base_size = 12, 
    base_family = "Asap SemiCondensed"
  ) +
  theme(
    panel.grid.minor = element_blank()
  )

p
```


## Adjust y-Axis

```{r}
#| label: exercise-scales-solution-02
#| output-location: column
#| code-line-numbers: "2,3,4,5"
p +
  scale_y_continuous(
    breaks = 0:7*5, 
    limits = c(0, NA)
  )
```


## Adjust x-Axis

```{r}
#| label: exercise-scales-solution-03
#| output-location: column
#| code-line-numbers: "2,3,4"
p +
  scale_x_discrete(
    labels = stringr::str_to_upper
  ) +
  scale_y_continuous(
    breaks = 0:7*5, 
    limits = c(0, NA)
  )
```


## Modify Colors

```{r}
#| label: exercise-scales-solution-04
#| output-location: column
#| code-line-numbers: "9,10,11"
p +
  scale_x_discrete(
    labels = stringr::str_to_upper
  ) +
  scale_y_continuous(
    breaks = 0:7*5, 
    limits = c(0, NA)
  ) +
  scale_color_brewer(
    palette = "Dark2"
  )
```


## Style Legend Labels

```{r}
#| label: exercise-scales-solution-05
#| output-location: column
#| code-line-numbers: "11,12"
p +
  scale_x_discrete(
    labels = stringr::str_to_upper
  ) +
  scale_y_continuous(
    breaks = 0:7*5, 
    limits = c(0, NA)
  ) +
  scale_color_brewer(
    palette = "Dark2", 
    name = NULL, 
    labels = stringr::str_to_title
  )
```


## Modify Legend

```{r}
#| label: exercise-scales-solution-06
#| output-location: column
#| code-line-numbers: "13,14,15"
p +
  scale_x_discrete(
    labels = stringr::str_to_upper
  ) +
  scale_y_continuous(
    breaks = 0:7*5, 
    limits = c(0, NA)
  ) +
  scale_color_brewer(
    palette = "Dark2", 
    name = NULL, 
    labels = stringr::str_to_title,
    guide = guide_legend(
      keyheight = unit(3, "lines")
    )
  )
```



# Coordinate Systems



## Coordinate Systems

<br>

<b class='simple-highlight-grn' style='font-size:2.6rem;'>= interpret the position aesthetics</b><br><br>

::: incremental
-   **linear coordinate systems:** preserve the geometrical shapes
    -   `coord_cartesian()`
    -   `coord_fixed()`
    -   `coord_flip()`
-   **non-linear coordinate systems:** likely change the geometrical shapes
    -   `coord_polar()`
    -   `coord_map()` and `coord_sf()`
    -   `coord_trans()`
:::



## Cartesian Coordinate System

```{r}
#| label: coord-cartesian
#| output-location: column
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  coord_cartesian()
```



## Cartesian Coordinate System

```{r}
#| label: coord-cartesian-zoom
#| output-location: column
#| code-line-numbers: "6,7,8"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  coord_cartesian(
    ylim = c(NA, 15000)
  )
```



## Changing Limits

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-ylim
#| fig-height: 3.5
#| code-line-numbers: "6,7,8"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  coord_cartesian(
    ylim = c(NA, 15000)
  )
```

```{r}
#| label: scale-y-limits
#| fig-height: 3.5
#| code-line-numbers: "6,7,8"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  scale_y_continuous(
    limits = c(NA, 15000)
  )
```
:::



## Clipping

```{r}
#| label: coord-clip
#| output-location: column
#| code-line-numbers: "8|10,11,12"
ggplot(
    bikes,
    aes(x = season, y = count)
  ) +
  geom_boxplot() +
  coord_cartesian(
    ylim = c(NA, 15000),
    clip = "off"
  ) +
  theme(
    plot.margin = margin(t = 150)
  )
```



## Clipping

```{r}
#| label: coord-clip-text
#| output-location: column
#| code-line-numbers: "2,3|6,7,8,9,10|12"
ggplot(
    filter(bikes, is_holiday == TRUE),
    aes(x = temp, y = count)
  ) +
  geom_point() +
  geom_text(
    aes(label = season),
    nudge_x = .3,
    hjust = 0
  ) +
  coord_cartesian(
    clip = "off"
  )
```



## ... or better use {ggrepel}

```{r}
#| label: coord-clip-text-repel
#| output-location: column
#| code-line-numbers: "6"
ggplot(
    filter(bikes, is_holiday == TRUE),
    aes(x = temp, y = count)
  ) +
  geom_point() +
  ggrepel::geom_text_repel(
    aes(label = season),
    nudge_x = .3,
    hjust = 0
  ) +
  coord_cartesian(
    clip = "off"
  )
```



## Remove All Padding

```{r}
#| label: coord-expand-off-clip
#| output-location: column
#| code-line-numbers: "7|8"
ggplot(
    bikes,
    aes(x = temp, y = count)
  ) +
  geom_point() +
  coord_cartesian(
    expand = FALSE,
    clip = "off"
  )
```



## Fixed Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-fixed
#| fig-height: 4.2
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = temp, y = temp_feel)
  ) +
  geom_point() +
  coord_fixed()
```

::: fragment
```{r}
#| label: coord-fixed-custom
#| fig-height: 4.2
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = temp, y = temp_feel)
  ) +
  geom_point() +
  coord_fixed(ratio = 4)
```
:::
:::



## Flipped Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-comp-flip
#| fig-height: 4.1
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = weather_type)
  ) +
  geom_bar() +
  coord_cartesian()
```

```{r}
#| label: coord-flip
#| fig-height: 4.1
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = weather_type)
  ) +
  geom_bar() +
  coord_flip()
```
:::



## Flipped Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-switch-x-y
#| fig-height: 4.1
#| code-line-numbers: "3,6"
ggplot(
    bikes,
    aes(y = weather_type)
  ) +
  geom_bar() +
  coord_cartesian()
```

```{r}
#| label: coord-flip-again
#| fig-height: 4.1
#| code-line-numbers: "3,6"
ggplot(
    bikes,
    aes(x = weather_type)
  ) +
  geom_bar() +
  coord_flip()
```
:::



## Reminder: Sort Your Bars!

```{r}
#| label: forcats-sort-infreq
#| output-location: column
#| code-line-numbers: "4|1|1,5,6,7"
library(forcats)

ggplot(
    filter(bikes, !is.na(weather_type)),
    aes(
      y = fct_infreq(weather_type)
    )
  ) +
  geom_bar()
```



## Reminder: Sort Your Bars!

```{r}
#| label: forcats-sort-infreq-rev
#| output-location: column
#| code-line-numbers: "6,7,8"
library(forcats)

ggplot(
    filter(bikes, !is.na(weather_type)),
    aes(
      y = fct_rev(
        fct_infreq(weather_type)
      )
    )
  ) +
  geom_bar()
```



## Circular Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-comp-polar
#| fig-height: 3.9
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar() +
  coord_cartesian()
```

::: fragment
```{r}
#| label: coord-polar
#| fig-height: 3.9
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar() +
  coord_polar()
```
:::
:::



## Circular Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-comp-polar-no-padding
#| fig-height: 3.9
#| code-line-numbers: "6,7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar(width = 1) +
  coord_cartesian()
```

::: fragment
```{r}
#| label: coord-polar-coxcomb
#| fig-height: 3.9
#| code-line-numbers: "6,7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar(width = 1) +
  coord_polar()
```
:::
:::



## Circular Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-polar-theta-x
#| fig-height: 3.9
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar(width = 1) +
  coord_polar(theta = "x")
```

```{r}
#| label: coord-polar-theta-y
#| fig-height: 3.9
#| code-line-numbers: "7"
ggplot(
    bikes,
    aes(x = is_workday,
        fill = is_workday)
  ) +
  geom_bar(width = 1) +
  coord_polar(theta = "y")
```
:::


## Circular Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: coord-cartesian-comp-polar-stacked
#| fig-height: 4.1
#| code-line-numbers: "3,6"
ggplot(
    bikes,
    aes(x = 1, fill = is_workday)
  ) +
  geom_bar() +
  coord_cartesian() 
```

::: fragment
```{r}
#| label: coord-polar-pie
#| fig-height: 4.1
#| code-line-numbers: "3,6"
ggplot(
    bikes,
    aes(x = 1, fill = is_workday)
  ) +
  geom_bar() +
  coord_polar(theta = "y") 
```
:::
:::



## Transform a Coordinate System

```{r}
#| label: coord-trans-log
#| output-location: column
#| code-line-numbers: "6"
ggplot(
    bikes,
    aes(x = temp, y = count)
  ) +
  geom_point() +
  coord_trans(y = "log10")
```



## Transform a Coordinate System

::: {layout-ncol="2"}
```{r}
#| label: trans-log-via-coord
#| fig-height: 3.6
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = temp, y = count,
        group = day_night)
  ) +
  geom_point() +
  geom_smooth(method = "lm") +
  coord_trans(y = "log10")
```

::: fragment
```{r}
#| label: trans-log-via-scale
#| fig-height: 3.6
#| code-line-numbers: "8"
ggplot(
    bikes,
    aes(x = temp, y = count,
        group = day_night)
  ) +
  geom_point() +
  geom_smooth(method = "lm") +
  scale_y_log10()
```
:::
:::



## Spatial Coordinate (Reference) Systems

```{r}
#| label: coord-sf
#| output-location: column
#| code-line-numbers: "1,2,3|5,6,11|7|8,9,10"
countries <- rnaturalearth::ne_countries(
  returnclass = "sf"
)

ggplot() +
  geom_sf(
    data = countries,
    color = "#79dfbd",
    fill = "#28a87d",
    linewidth = .3
  )
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: coord-sf-mollweide
#| output-location: column
#| code-line-numbers: "8,9,10"
ggplot() +
  geom_sf(
    data = countries,
    color = "#79dfbd",
    fill = "#28a87d",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=moll"
  )
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: coord-sf-bonne
#| output-location: column
#| code-line-numbers: "9"
ggplot() +
  geom_sf(
    data = countries,
    color = "#79dfbd",
    fill = "#28a87d",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=bonne +lat_1=10"
  )
```



## Generate Own Simple Features Objects

```{r}
#| label: locator-object
#| code-line-numbers: "1,2,3,4|2|3"
sf_marker <- sf::st_sfc(
  sf::st_point(c(8.5325, 52.0302)), 
  crs = sf::st_crs(countries)
)
```



## Generate Own Simple Features Objects

```{r}
#| label: locator-print
#| code-line-numbers: "6"
sf_marker <- sf::st_sfc(
  sf::st_point(c(8.5325, 52.0302)), 
  crs = sf::st_crs(countries)
)

sf_marker
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: map-locator
#| fig-width: 16
#| fig-height: 7.5
ggplot() +
  geom_sf(data = countries, fill = "grey50", color = NA) + 
  geom_sf(data = sf_marker, shape = 21, color = "firebrick", fill = NA, size = 5, stroke = 2)
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: map-locator-proj
#| fig-width: 16
#| fig-height: 7.5
ggplot() +
  geom_sf(data = countries, fill = "grey50", color = NA) + 
  geom_sf(data = sf_marker, shape = 21, color = "firebrick", fill = NA, size = 5, stroke = 2) +
  coord_sf(crs = "+proj=moll")
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: rnaturalearth-ocean-data
#| message: false
oceans <- rnaturalearth::ne_download(
  category = "physical", type = "ocean", returnclass = "sf"
)
```



## Spatial Coordinate (Reference) Systems

```{r}
#| label: coord-sf-bonne-ocean
#| output-location: column
#| message: false
#| code-line-numbers: "2,3,4,5|3,7|15"
ggplot() +
  geom_sf(
    data = oceans,
    fill = "#d8f1f6"
  ) +
  geom_sf(
    data = countries,
    color = "#79dfbd",
    fill = "#28a87d",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=moll"
  ) +
  theme_void()
```



## Mapping of Visual Properties

```{r}
#| label: coord-sf-bonne-ocean-aes
#| output-location: column
#| code-line-numbers: "9|16,17,21|18,19,20|23"
ggplot() +
  geom_sf(
    data = oceans,
    fill = "#d8f1f6",
    color = "white"
  ) +
  geom_sf(
    data = countries,
    aes(fill = economy),
    color = "white",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=moll"
  ) +
  scale_fill_viridis_d(
    option = "magma",
    guide = guide_legend(
      ncol = 1, title.position = "top"
    )
  ) +
  theme_void() +
  theme(legend.position = "top")
```



## Mapping of Visual Properties

```{r}
#| label: coord-sf-bonne-ocean-aes-expression
#| output-location: column
#| code-line-numbers: "9|9,16,17,18|9,16,17,18,20"
ggplot() +
  geom_sf(
    data = oceans,
    fill = "#d8f1f6",
    color = "white"
  ) +
  geom_sf(
    data = countries,
    aes(fill = adm0_a3 %in% c("AUS", "NZL")),
    color = "white",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=moll"
  ) +
  scale_fill_manual(
    values = c("grey70", "#208462")
  ) +
  theme_void() +
  theme(legend.position = "none")
```



## Better Borders

```{r}
#| label: coord-sf-bonne-ocean-inner
#| output-location: column
#| code-line-numbers: "1,10,11,12,15,16,17,18"
borders <- rmapshaper::ms_innerlines(countries)

ggplot() +
  geom_sf(
    data = oceans,
    fill = "#d8f1f6",
    color = "white"
  ) +
  geom_sf(
    data = countries,
    aes(fill = adm0_a3 %in% c("AUS", "NZL")),
    color = "transparent"
  ) +
  geom_sf(
    data = borders,
    fill = "transparent",
    color = "white",
    linewidth = .3
  ) +
  coord_sf(
    crs = "+proj=moll"
  ) +
  scale_fill_manual(
    values = c("grey70", "#208462")
  ) +
  theme_void() +
  theme(legend.position = "none")
```



## <b style='color:#663399;'>Recap</b>

::: recap
::: incremental
-   **`facet_*()`** functions allow to create small multiples
-   **`scale_*()`** functions translate between `aes`thetics and properties
-   use **`*_continuous()`** for numerical data
-   ... and **`*_discrete()`** for categorical data
-   use **`scale_color|fill_*()`** to customize data-related colors
-   **`coord_*()`** functions interpret the positional aesthetics
    -   e.g. create polar plots or work with spatial projections 
-   be careful when adjusting axis limits:
    -   `scale_*_continuous(limits)` removes the data outside the range
    -   `coord_*(*lim)` keeps the data and zooms into the range
:::
:::



# Exercises



## Exercise 1

::: question
Create the following visualization as close as possible:

```{r}
#| label: exercise-travel
#| fig-width: 11
#| fig-height: 5.7
#| echo: false
#| purl: false
travel <- readr::read_csv("data/carbon-footprint-travel-2022-simple.csv")

ggplot(travel, aes(x = emissions, y = forcats::fct_reorder(entity, -emissions))) +
  geom_col(aes(fill = emissions < 40), width = .65) +
  geom_vline(xintercept = 1:7*35.5, color = "white", linewidth = .6) +
  geom_text(
    aes(label = dplyr::if_else(
      emissions < 10,
      paste0("  ", round(emissions), " g of carbon dioxide equivalents per person and kilometer"),
      paste0("  ", round(emissions), "g")
    )),
    hjust = 0, family = "Asap SemiCondensed", size = 3.8
  ) +
  scale_x_continuous(
    expand = expansion(add = c(0, 15)), 
    breaks = 1:7*35.5, labels = c(paste0(1:6, "x"), "7x higher")
  ) +
  scale_y_discrete(name = NULL, expand = c(0, 0)) +
  scale_fill_manual(
    values = c("grey65", "#208865"), 
    guide = "none"
  ) +
  coord_cartesian(clip = "off") +
  labs(
    title = "Taking the train instead of a petrol car or plane for medium-range travels cuts your emissions by more than 80%.",
    subtitle = "If you took the Eurostar in France instead of a short-haul flight, you’d be able to cut your journey’s carbon footprint by around 97%.",
    caption = "Data: UK Government, Department for Energy Security and Net Zero via OurWorldInData\nNote: Official conversion factors used in UK reporting. Data for aviation is based on economy class.",
    x = "Travel emissions compared to taking the nation rail"
  ) +
  theme_minimal(base_size = 14, base_family = "Asap SemiCondensed") +
  theme(
    panel.grid = element_blank(),
    axis.title.x = element_text(hjust = 0, color = "grey30", size = rel(.85)),
    axis.text.x = element_text(hjust = c(rep(.5, 6), .12)),
    axis.text.y = element_text(color = "black", size = rel(1.2), hjust = 0),
    axis.ticks.x = element_line(color = "grey85", linewidth = .6),
    axis.ticks.length = unit(.4, "lines"),
    plot.title = element_text(face = "bold"),
    plot.subtitle = element_text(margin = margin(t = -5, b = 25)),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    plot.caption = element_text(hjust = 0, margin = margin(t = 20), size = rel(.7)),
    plot.margin = margin(rep(15, 4))
  )
```
:::



## Exercise 2

::: question
-   Download data set(s) for your home country or study area and plot it/them.
-   Change the projection with `coord_sf()` and observe how the spatial mapping changes.
-   Choose a projection that is suited for the given area.
-   Add a marker to indicate your home city, exact location of the study etc.
:::



# Solution Exercise 1 {background-color="#e6d9f2"}

```{r}
#| include: false
#| cache: false
theme_set(theme_grey())
theme_update(legend.position = "top")
```



## Exercise 1

::: question
Create the following visualization as close as possible:

```{r}
#| label: exercise-travel
#| fig-width: 11
#| fig-height: 5.7
#| echo: false
#| purl: false 
```
:::


## Data

```{r}
#| label: exercise-travel-solution-01
travel <- readr::read_csv("data/carbon-footprint-travel-2022-simple.csv")

travel
```


## Colored Bar Plot

```{r}
#| label: exercise-travel-solution-02
#| output-location: column
#| code-line-numbers: "2,3,4,5,6,7,8|5,6,7|9,10,11,12|10|1,14"
g1 <- 
  ggplot(
    travel, 
    aes(x = emissions, 
        y = forcats::fct_reorder(
          entity, -emissions
        ))
  ) +
  geom_col(
    aes(fill = emissions < 40), 
    width = .65
  )

g1
```



## Add Emission Labels

```{r}
#| label: exercise-travel-solution-03
#| output-location: column
#| code-line-numbers: "2,3,4,5,6,7"
g1 +
  geom_text(
    aes(label = emissions),
    family = "Asap SemiCondensed", 
    hjust = 0, 
    size = 3.8
  )
```



## Add Emission Labels

```{r}
#| label: exercise-travel-solution-04
#| output-location: column
#| code-line-numbers: "3,4,5,6,7|4|5|6"
g1 +
  geom_text(
    aes(label = dplyr::if_else(
      emissions < 10,
      paste0("  ", round(emissions), " g of carbon dioxide equivalents per person and kilometer"),
      paste0("  ", round(emissions), "g")
    )),
    hjust = 0, 
    family = "Asap SemiCondensed", 
    size = 3.8
  )
```



## Add Reference Lines

```{r}
#| label: exercise-travel-solution-05
#| output-location: column
#| code-line-numbers: "2,3,4,5,6"
g2 <- g1 +
  geom_vline(
    xintercept = 1:7*35.5, 
    color = "white", 
    linewidth = .6
  ) +
  geom_text(
    aes(label = dplyr::if_else(
      emissions < 10,
      paste0("  ", round(emissions), " g of carbon dioxide equivalents per person and kilometer"),
      paste0("  ", round(emissions), "g")
    )),
    hjust = 0, 
    family = "Asap SemiCondensed", 
    size = 3.8
  )

g2
```



## Adjust Axes

```{r}
#| label: exercise-travel-solution-06
#| output-location: column
#| code-line-numbers: "2,3,4,5,6|7,8,9,10|11"
g3 <- g2 +
  scale_x_continuous(
    expand = expansion(add = c(0, 15)), 
    breaks = 1:7*35.5, 
    labels = c(paste0(1:6, "x"), "7x higher")
  ) +
  scale_y_discrete(
    name = NULL, 
    expand = c(0, 0)
  ) +
  coord_cartesian(clip = "off")

g3
```



## Customize Colors

```{r}
#| label: exercise-travel-solution-07
#| output-location: column
#| code-line-numbers: "2,3,4,5"
g4 <- g3 +
  scale_fill_manual(
    values = c("grey65", "#208865"), 
    guide = "none"
  )

g4
```


## Adjust and Add Titles

```{r}
#| label: exercise-travel-solution-08
#| output-location: column
#| fig-width: 11
#| fig-height: 8
#| code-line-numbers: "2,3,4,5,6,7|3,4|5|6"
g5 <- g4 +
  labs(
    title = "Taking the train instead of a petrol car or plane for medium-range travels cuts your emissions by more than 80%.",
    subtitle = "If you took the Eurostar in France instead of a short-haul flight, you’d be able to cut your journey’s carbon footprint by around 97%.",
    caption = "Data: UK Government, Department for Energy Security and Net Zero via OurWorldInData\nNote: Official conversion factors used in UK reporting. Data for aviation is based on economy class.",
    x = "Travel emissions compared to taking the nation rail"
  )

g5
```



## Theming

```{r}
#| label: exercise-travel-solution-09
#| output-location: column
#| fig-width: 11
#| fig-height: 8
#| code-line-numbers: "2,3,4,5"
g6 <- g5 +
  theme_minimal(
    base_size = 14, 
    base_family = "Asap SemiCondensed"
  )

g6
```



## Theming

```{r}
#| label: exercise-travel-solution-10
#| output-location: column
#| fig-width: 11
#| fig-height: 8
#| code-line-numbers: "2,27|3|4,5,6|7,8,9,10,11,12|13,14,15,16|17,18,19,20,21,22,23|24,25|26"
g6 +
  theme(
    panel.grid = element_blank(),
    axis.title.x = element_text(
      hjust = 0, color = "grey30", size = rel(.85)
    ),
    axis.text.x = element_text(
      hjust = c(rep(.5, 6), .12)
    ),
    axis.text.y = element_text(
      color = "black", size = rel(1.2), hjust = 0
    ),
    axis.ticks.x = element_line(
      color = "grey85", linewidth = .6
    ),
    axis.ticks.length = unit(.4, "lines"),
    plot.title = element_text(face = "bold"),
    plot.subtitle = element_text(
      margin = margin(t = -5, b = 25)
    ),
    plot.caption = element_text(
      hjust = 0, margin = margin(t = 20), size = rel(.7)
    ),
    plot.title.position = "plot",
    plot.caption.position = "plot",
    plot.margin = margin(rep(15, 4))
  )
```



## Full Code

```{r}
#| label: exercise-travel-solution-full
#| eval: false
#| purl: false
travel <- readr::read_csv("data/carbon-footprint-travel-2022-simple.csv")

ggplot(travel, aes(x = emissions, y = forcats::fct_reorder(entity, -emissions))) +
  geom_col(aes(fill = emissions < 40), width = .65) +
  geom_vline(xintercept = 1:7*35.5, color = "white", linewidth = .6) +
  geom_text(aes(label = dplyr::if_else(emissions < 10,
                                       paste0("  ", round(emissions), 
                                              " g of carbon dioxide equivalents per person and kilometer"),
                                       paste0("  ", round(emissions), "g"))),
            hjust = 0, family = "Asap SemiCondensed", size = 3.8) +
  scale_x_continuous(expand = expansion(add = c(0, 15)), 
                     breaks = 1:7*35.5, labels = c(paste0(1:6, "x"), "7x higher")) +
  scale_y_discrete(name = NULL, expand = c(0, 0)) +
  scale_fill_manual(values = c("grey65", "#208865"), guide = "none") +
  coord_cartesian(clip = "off") +
  labs(title = "Taking the train instead of a petrol car or plane for medium-range travels cuts your emissions by more than 80%.",
       subtitle = "If you took the Eurostar in France instead of a short-haul flight, you’d be able to cut your journey’s carbon footprint by around 97%.",
       caption = "Data: UK Government, Department for Energy Security and Net Zero via OurWorldInData\nNote: Official conversion factors used in UK reporting. Data for aviation is based on economy class.",
      x = "Travel emissions compared to taking the nation rail") +
  theme_minimal(base_size = 14, base_family = "Asap SemiCondensed") +
  theme(panel.grid = element_blank(),
        axis.title.x = element_text(hjust = 0, color = "grey30", size = rel(.85)),
        axis.text.x = element_text(hjust = c(rep(.5, 6), .12)),
        axis.text.y = element_text(color = "black", size = rel(1.2), hjust = 0),
        axis.ticks.x = element_line(color = "grey85", linewidth = .6),
        axis.ticks.length = unit(.4, "lines"),
        plot.title = element_text(face = "bold"),
        plot.subtitle = element_text(margin = margin(t = -5, b = 25)),
        plot.title.position = "plot",
        plot.caption.position = "plot",
        plot.caption = element_text(hjust = 0, margin = margin(t = 20), size = rel(.7)),
        plot.margin = margin(rep(15, 4)))
```



## Export Graphic

```{r}
#| label: exercise-travel-solution-export
#| eval: false
#| purl: false
ggsave("travel-emissions.pdf", width = 11, height = 6, device = cairo_pdf)

ggsave("travel-emissions.png", width = 11, height = 6, dpi = 600, bg = "white")
```


# Solution Exercise 2 {background-color="#e6d9f2"}



## Exercise 2

::: question
-   Download data set(s) for your home country or study area and plot it/them.
-   Change the projection with `coord_sf()` and observe how the spatial mapping changes.
-   Choose a projection that is suited for the given area.
-   Add a marker to indicate your home city, exact location of the study etc.
:::



## Setup

```{r}
#| label: exercise-sf-solution-01
#| cache: false
#| purl: false
library(ggplot2)
library(sf)

theme_set(theme_minimal(base_size = 14, base_family = "Asap SemiCondensed"))
theme_update(panel.grid.minor = element_blank())

sf_germany <- rnaturalearth::ne_countries(country = "Germany", returnclass = "sf")
sf_germany_hd <- rnaturalearth::ne_countries(country = "Germany", scale = 10, returnclass = "sf")

class(sf_germany)
```



## Plot the Data

::: {layout-ncol="2"}
```{r}
#| label: exercise-sf-solution-02
#| fig-height: 5.3
#| purl: false
ggplot(sf_germany) +  
  geom_sf(fill = "#CBE7BE")
```

::: fragment
```{r}
#| label: exercise-sf-solution-03
#| fig-height: 5.3
#| purl: false
ggplot(sf_germany_hd) + 
  geom_sf(fill = "#CBE7BE")
```
:::
:::



## Change Projection

```{r} 
#| label: exercise-sf-solution-04
#| fig-height: 6.2
#| fig-align: center
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  coord_sf(crs = "+proj=lcc +lat_1=48.66 +lat_2=53.66 +lat_0=51 +lon_0=10.5 +ellps=GRS80") 
``` 



## Change Projection

```{r} 
#| label: exercise-sf-solution-05
#| fig-height: 6.2
#| fig-align: center
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  coord_sf(crs = st_crs(5243)) 
```



## Change Projection
```{r} 
#| label: exercise-sf-solution-06
#| fig-height: 6.2
#| fig-align: center
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  coord_sf(crs = "+proj=moll") 
``` 



## Change Projection

```{r} 
#| label: exercise-sf-solution-07
#| fig-width: 6.6
#| fig-height: 6.2
#| fig-align: center
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  coord_sf(crs = "+proj=laea +lon_0=-70 +lat_0=0") 
```



## Generate Locator Object

```{r}
#| label: exercise-sf-solution-08
#| purl: false
sf_bln <- sf::st_sfc(
  sf::st_point(c(13.4050, 52.5200)), 
  crs = sf::st_crs(sf_germany)
)

sf_bln
```



## Add Location Marker

::: {layout-ncol="2"}
```{r} 
#| label: exercise-sf-solution-09
#| fig-height: 4.8
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  geom_sf(data = sf_bln, size = 5) +
  coord_sf(crs = "+proj=moll")
``` 

```{r} 
#| label: exercise-sf-solution-10
#| fig-height: 4.8
#| purl: false
ggplot(sf_germany) + 
  geom_sf(fill = "#CBE7BE") +
  geom_sf(data = sf_bln, size = 5) +
  coord_sf(crs = st_crs(5243))
```
:::



# <br><b style='color:white;'>Thank You!</b><br><br>{background-color="#292929" background-image="img/bg-blank.png"}

![](img/logo-text-steps-cabinet.png){fig-align="center" width="80%" fig-alt="My logo"}

<div style='text-align:center;font-size:.75em;color:white;'><a style='color:white;'  href="https://cedricscherer.com">www.cedricscherer.com</a>&ensp;//&ensp; <a style='color:white;' href="https://linktr.ee/cedscherer">www.linktr.ee/CedScherer</a><br><br><br>
</div>

::: footer
:::
